package com.pbar.halfcircleprogressbar;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.LinearGradient;
import android.graphics.Paint;
import android.graphics.RectF;
import android.graphics.Shader;
import android.util.AttributeSet;
import android.view.View;

public class HalfCircleProgressBar extends View {

    private int progress = 0;
    private int max = 100;

    private Paint backgroundPaint;
    private Paint progressPaint;
    private Paint maxLimitPaint;

    private RectF rectF;

    public HalfCircleProgressBar(Context context) {
        super(context);
        init();
    }

    public HalfCircleProgressBar(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public HalfCircleProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init();
    }

    private void init() {
        backgroundPaint = new Paint();
        backgroundPaint.setColor(Color.TRANSPARENT);
        backgroundPaint.setStyle(Paint.Style.FILL);
        backgroundPaint.setStrokeWidth(40);
        backgroundPaint.setAntiAlias(true);

        progressPaint = new Paint();
        progressPaint.setColor(Color.BLUE);
        progressPaint.setStyle(Paint.Style.STROKE);
        progressPaint.setStrokeWidth(40);
        progressPaint.setAntiAlias(true);

        maxLimitPaint = new Paint();
        maxLimitPaint.setColor(Color.LTGRAY); // Set the color for the maximum limit
        maxLimitPaint.setStyle(Paint.Style.STROKE);
        maxLimitPaint.setStrokeWidth(40);
        maxLimitPaint.setAntiAlias(true);

        rectF = new RectF();
    }


    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        int width = getWidth();
        int height = getHeight();

        // Ensure that the view is square
        int diameter = Math.min(width, height);
        int radius = diameter / 2;

        // Calculate the radius to ensure the arc fits within the view width with no margin
        radius = width / 2;

        // Adjust the RectF to account for the progress paint stroke width
        float strokeWidth = progressPaint.getStrokeWidth();
        rectF.set(
                width / 2 - radius + strokeWidth / 2,
                height / 2 - radius + strokeWidth / 2,
                width / 2 + radius - strokeWidth / 2,
                height / 2 + radius - strokeWidth / 2
        );

        // Draw the background circle
        canvas.drawCircle(width / 2, height / 2, radius - strokeWidth / 2, backgroundPaint);

        // Draw the maximum limit half circle
        float maxLimitAngle = 180;
        canvas.drawArc(rectF, 180, maxLimitAngle, false, maxLimitPaint);


        // Draw the fading color progress arc
        float angle = 180 * progress / max;
        int startColor = Color.BLUE; // Start color
        int endColor = Color.GREEN;  // End color
        Shader shader = new LinearGradient(
                rectF.left, rectF.top, rectF.right, rectF.bottom,
                startColor, endColor, Shader.TileMode.CLAMP
        );
        progressPaint.setShader(shader);
        canvas.drawArc(rectF, 180, angle, false, progressPaint);

        // Reset the shader to null after drawing
        progressPaint.setShader(null);  }


    public void setProgress(int progress) {
        this.progress = progress;
        invalidate();
    }

    public void setMax(int max) {
        this.max = max;
        invalidate();
    }
}
